// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tec_mfs.proto
// Protobuf C++ Version: 6.31.1

#ifndef tec_5fmfs_2eproto_2epb_2eh
#define tec_5fmfs_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tec_5fmfs_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tec_5fmfs_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_tec_5fmfs_2eproto;
}  // extern "C"
namespace tec_mfs {
class BlockData;
struct BlockDataDefaultTypeInternal;
extern BlockDataDefaultTypeInternal _BlockData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BlockData_class_data_;
class BlockRequest;
struct BlockRequestDefaultTypeInternal;
extern BlockRequestDefaultTypeInternal _BlockRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BlockRequest_class_data_;
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Empty_class_data_;
class FileDataResponse;
struct FileDataResponseDefaultTypeInternal;
extern FileDataResponseDefaultTypeInternal _FileDataResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FileDataResponse_class_data_;
class FileListResponse;
struct FileListResponseDefaultTypeInternal;
extern FileListResponseDefaultTypeInternal _FileListResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FileListResponse_class_data_;
class FileMetadata;
struct FileMetadataDefaultTypeInternal;
extern FileMetadataDefaultTypeInternal _FileMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FileMetadata_class_data_;
class FileReference;
struct FileReferenceDefaultTypeInternal;
extern FileReferenceDefaultTypeInternal _FileReference_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FileReference_class_data_;
class FileRequest;
struct FileRequestDefaultTypeInternal;
extern FileRequestDefaultTypeInternal _FileRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FileRequest_class_data_;
class NodeInfo;
struct NodeInfoDefaultTypeInternal;
extern NodeInfoDefaultTypeInternal _NodeInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull NodeInfo_class_data_;
class StatusResponse;
struct StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StatusResponse_class_data_;
class SystemStatusResponse;
struct SystemStatusResponseDefaultTypeInternal;
extern SystemStatusResponseDefaultTypeInternal _SystemStatusResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SystemStatusResponse_class_data_;
class SystemStatusResponse_NodeStatus;
struct SystemStatusResponse_NodeStatusDefaultTypeInternal;
extern SystemStatusResponse_NodeStatusDefaultTypeInternal _SystemStatusResponse_NodeStatus_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SystemStatusResponse_NodeStatus_class_data_;
}  // namespace tec_mfs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tec_mfs {

// ===================================================================


// -------------------------------------------------------------------

class SystemStatusResponse_NodeStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.SystemStatusResponse.NodeStatus) */ {
 public:
  inline SystemStatusResponse_NodeStatus() : SystemStatusResponse_NodeStatus(nullptr) {}
  ~SystemStatusResponse_NodeStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SystemStatusResponse_NodeStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SystemStatusResponse_NodeStatus(::google::protobuf::internal::ConstantInitialized);

  inline SystemStatusResponse_NodeStatus(const SystemStatusResponse_NodeStatus& from) : SystemStatusResponse_NodeStatus(nullptr, from) {}
  inline SystemStatusResponse_NodeStatus(SystemStatusResponse_NodeStatus&& from) noexcept
      : SystemStatusResponse_NodeStatus(nullptr, ::std::move(from)) {}
  inline SystemStatusResponse_NodeStatus& operator=(const SystemStatusResponse_NodeStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemStatusResponse_NodeStatus& operator=(SystemStatusResponse_NodeStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SystemStatusResponse_NodeStatus& default_instance() {
    return *reinterpret_cast<const SystemStatusResponse_NodeStatus*>(
        &_SystemStatusResponse_NodeStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SystemStatusResponse_NodeStatus& a, SystemStatusResponse_NodeStatus& b) { a.Swap(&b); }
  inline void Swap(SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SystemStatusResponse_NodeStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SystemStatusResponse_NodeStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SystemStatusResponse_NodeStatus& from) { SystemStatusResponse_NodeStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.SystemStatusResponse.NodeStatus"; }

 protected:
  explicit SystemStatusResponse_NodeStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SystemStatusResponse_NodeStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SystemStatusResponse_NodeStatus& from);
  SystemStatusResponse_NodeStatus(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SystemStatusResponse_NodeStatus&& from) noexcept
      : SystemStatusResponse_NodeStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeIdFieldNumber = 1,
    kNodeAddressFieldNumber = 2,
    kTotalCapacityFieldNumber = 4,
    kUsedCapacityFieldNumber = 5,
    kFreeCapacityFieldNumber = 6,
    kNodePortFieldNumber = 3,
  };
  // string node_id = 1;
  void clear_node_id() ;
  const ::std::string& node_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_node_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_node_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_node_id();
  void set_allocated_node_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_node_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_node_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_node_id();

  public:
  // string node_address = 2;
  void clear_node_address() ;
  const ::std::string& node_address() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_node_address(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_node_address();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_node_address();
  void set_allocated_node_address(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_node_address() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_node_address(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_node_address();

  public:
  // int64 total_capacity = 4;
  void clear_total_capacity() ;
  ::int64_t total_capacity() const;
  void set_total_capacity(::int64_t value);

  private:
  ::int64_t _internal_total_capacity() const;
  void _internal_set_total_capacity(::int64_t value);

  public:
  // int64 used_capacity = 5;
  void clear_used_capacity() ;
  ::int64_t used_capacity() const;
  void set_used_capacity(::int64_t value);

  private:
  ::int64_t _internal_used_capacity() const;
  void _internal_set_used_capacity(::int64_t value);

  public:
  // int64 free_capacity = 6;
  void clear_free_capacity() ;
  ::int64_t free_capacity() const;
  void set_free_capacity(::int64_t value);

  private:
  ::int64_t _internal_free_capacity() const;
  void _internal_set_free_capacity(::int64_t value);

  public:
  // int32 node_port = 3;
  void clear_node_port() ;
  ::int32_t node_port() const;
  void set_node_port(::int32_t value);

  private:
  ::int32_t _internal_node_port() const;
  void _internal_set_node_port(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.SystemStatusResponse.NodeStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 67,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SystemStatusResponse_NodeStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr node_id_;
    ::google::protobuf::internal::ArenaStringPtr node_address_;
    ::int64_t total_capacity_;
    ::int64_t used_capacity_;
    ::int64_t free_capacity_;
    ::int32_t node_port_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SystemStatusResponse_NodeStatus_class_data_;
// -------------------------------------------------------------------

class StatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.StatusResponse) */ {
 public:
  inline StatusResponse() : StatusResponse(nullptr) {}
  ~StatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StatusResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline StatusResponse(const StatusResponse& from) : StatusResponse(nullptr, from) {}
  inline StatusResponse(StatusResponse&& from) noexcept
      : StatusResponse(nullptr, ::std::move(from)) {}
  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusResponse& default_instance() {
    return *reinterpret_cast<const StatusResponse*>(
        &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(StatusResponse& a, StatusResponse& b) { a.Swap(&b); }
  inline void Swap(StatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StatusResponse& from) { StatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StatusResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.StatusResponse"; }

 protected:
  explicit StatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StatusResponse& from);
  StatusResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StatusResponse&& from) noexcept
      : StatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.StatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StatusResponse_class_data_;
// -------------------------------------------------------------------

class NodeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.NodeInfo) */ {
 public:
  inline NodeInfo() : NodeInfo(nullptr) {}
  ~NodeInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NodeInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NodeInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeInfo(::google::protobuf::internal::ConstantInitialized);

  inline NodeInfo(const NodeInfo& from) : NodeInfo(nullptr, from) {}
  inline NodeInfo(NodeInfo&& from) noexcept
      : NodeInfo(nullptr, ::std::move(from)) {}
  inline NodeInfo& operator=(const NodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeInfo& operator=(NodeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeInfo& default_instance() {
    return *reinterpret_cast<const NodeInfo*>(
        &_NodeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NodeInfo& a, NodeInfo& b) { a.Swap(&b); }
  inline void Swap(NodeInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NodeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeInfo& from) { NodeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NodeInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.NodeInfo"; }

 protected:
  explicit NodeInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  NodeInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const NodeInfo& from);
  NodeInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, NodeInfo&& from) noexcept
      : NodeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeIdFieldNumber = 1,
    kNodeAddressFieldNumber = 2,
    kStoragePathFieldNumber = 4,
    kNodeCapacityFieldNumber = 5,
    kNodePortFieldNumber = 3,
  };
  // string node_id = 1;
  void clear_node_id() ;
  const ::std::string& node_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_node_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_node_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_node_id();
  void set_allocated_node_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_node_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_node_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_node_id();

  public:
  // string node_address = 2;
  void clear_node_address() ;
  const ::std::string& node_address() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_node_address(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_node_address();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_node_address();
  void set_allocated_node_address(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_node_address() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_node_address(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_node_address();

  public:
  // string storage_path = 4;
  void clear_storage_path() ;
  const ::std::string& storage_path() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_storage_path(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_storage_path();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_storage_path();
  void set_allocated_storage_path(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_storage_path() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_storage_path(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_storage_path();

  public:
  // int64 node_capacity = 5;
  void clear_node_capacity() ;
  ::int64_t node_capacity() const;
  void set_node_capacity(::int64_t value);

  private:
  ::int64_t _internal_node_capacity() const;
  void _internal_set_node_capacity(::int64_t value);

  public:
  // int32 node_port = 3;
  void clear_node_port() ;
  ::int32_t node_port() const;
  void set_node_port(::int32_t value);

  private:
  ::int32_t _internal_node_port() const;
  void _internal_set_node_port(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.NodeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const NodeInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr node_id_;
    ::google::protobuf::internal::ArenaStringPtr node_address_;
    ::google::protobuf::internal::ArenaStringPtr storage_path_;
    ::int64_t node_capacity_;
    ::int32_t node_port_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull NodeInfo_class_data_;
// -------------------------------------------------------------------

class FileRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.FileRequest) */ {
 public:
  inline FileRequest() : FileRequest(nullptr) {}
  ~FileRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileRequest(::google::protobuf::internal::ConstantInitialized);

  inline FileRequest(const FileRequest& from) : FileRequest(nullptr, from) {}
  inline FileRequest(FileRequest&& from) noexcept
      : FileRequest(nullptr, ::std::move(from)) {}
  inline FileRequest& operator=(const FileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileRequest& operator=(FileRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileRequest& default_instance() {
    return *reinterpret_cast<const FileRequest*>(
        &_FileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(FileRequest& a, FileRequest& b) { a.Swap(&b); }
  inline void Swap(FileRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileRequest& from) { FileRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.FileRequest"; }

 protected:
  explicit FileRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FileRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FileRequest& from);
  FileRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FileRequest&& from) noexcept
      : FileRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilenameFieldNumber = 1,
    kContentFieldNumber = 2,
  };
  // string filename = 1;
  void clear_filename() ;
  const ::std::string& filename() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_filename();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_filename();
  void set_allocated_filename(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_filename() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_filename(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_filename();

  public:
  // bytes content = 2;
  void clear_content() ;
  const ::std::string& content() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_content();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_content();
  void set_allocated_content(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_content() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_content(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.FileRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FileRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FileRequest_class_data_;
// -------------------------------------------------------------------

class FileReference final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.FileReference) */ {
 public:
  inline FileReference() : FileReference(nullptr) {}
  ~FileReference() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileReference* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileReference));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileReference(::google::protobuf::internal::ConstantInitialized);

  inline FileReference(const FileReference& from) : FileReference(nullptr, from) {}
  inline FileReference(FileReference&& from) noexcept
      : FileReference(nullptr, ::std::move(from)) {}
  inline FileReference& operator=(const FileReference& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileReference& operator=(FileReference&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileReference& default_instance() {
    return *reinterpret_cast<const FileReference*>(
        &_FileReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(FileReference& a, FileReference& b) { a.Swap(&b); }
  inline void Swap(FileReference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileReference* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileReference* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileReference>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileReference& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileReference& from) { FileReference::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileReference* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.FileReference"; }

 protected:
  explicit FileReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FileReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FileReference& from);
  FileReference(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FileReference&& from) noexcept
      : FileReference(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileIdFieldNumber = 1,
    kFileNameFieldNumber = 2,
  };
  // string file_id = 1;
  void clear_file_id() ;
  const ::std::string& file_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_file_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_file_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_file_id();
  void set_allocated_file_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_file_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_file_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_file_id();

  public:
  // string file_name = 2;
  void clear_file_name() ;
  const ::std::string& file_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_file_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_file_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_file_name();
  void set_allocated_file_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_file_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_file_name();

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.FileReference)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FileReference& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr file_id_;
    ::google::protobuf::internal::ArenaStringPtr file_name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FileReference_class_data_;
// -------------------------------------------------------------------

class FileMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.FileMetadata) */ {
 public:
  inline FileMetadata() : FileMetadata(nullptr) {}
  ~FileMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileMetadata(::google::protobuf::internal::ConstantInitialized);

  inline FileMetadata(const FileMetadata& from) : FileMetadata(nullptr, from) {}
  inline FileMetadata(FileMetadata&& from) noexcept
      : FileMetadata(nullptr, ::std::move(from)) {}
  inline FileMetadata& operator=(const FileMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileMetadata& operator=(FileMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileMetadata& default_instance() {
    return *reinterpret_cast<const FileMetadata*>(
        &_FileMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(FileMetadata& a, FileMetadata& b) { a.Swap(&b); }
  inline void Swap(FileMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileMetadata& from) { FileMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.FileMetadata"; }

 protected:
  explicit FileMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FileMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FileMetadata& from);
  FileMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FileMetadata&& from) noexcept
      : FileMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 2,
    kFileSizeFieldNumber = 1,
    kCreatedAtFieldNumber = 3,
  };
  // string hash = 2;
  void clear_hash() ;
  const ::std::string& hash() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_hash();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_hash();
  void set_allocated_hash(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_hash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_hash(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_hash();

  public:
  // int64 file_size = 1;
  void clear_file_size() ;
  ::int64_t file_size() const;
  void set_file_size(::int64_t value);

  private:
  ::int64_t _internal_file_size() const;
  void _internal_set_file_size(::int64_t value);

  public:
  // int64 created_at = 3;
  void clear_created_at() ;
  ::int64_t created_at() const;
  void set_created_at(::int64_t value);

  private:
  ::int64_t _internal_created_at() const;
  void _internal_set_created_at(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.FileMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 33,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FileMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::int64_t file_size_;
    ::int64_t created_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FileMetadata_class_data_;
// -------------------------------------------------------------------

class Empty final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:tec_mfs.Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Empty* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Empty));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Empty(::google::protobuf::internal::ConstantInitialized);

  inline Empty(const Empty& from) : Empty(nullptr, from) {}
  inline Empty(Empty&& from) noexcept
      : Empty(nullptr, ::std::move(from)) {}
  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *reinterpret_cast<const Empty*>(
        &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Empty& a, Empty& b) { a.Swap(&b); }
  inline void Swap(Empty* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.Empty"; }

 protected:
  explicit Empty(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Empty(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Empty& from);
  Empty(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Empty&& from) noexcept
      : Empty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:tec_mfs.Empty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Empty& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Empty_class_data_;
// -------------------------------------------------------------------

class BlockRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.BlockRequest) */ {
 public:
  inline BlockRequest() : BlockRequest(nullptr) {}
  ~BlockRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockRequest(::google::protobuf::internal::ConstantInitialized);

  inline BlockRequest(const BlockRequest& from) : BlockRequest(nullptr, from) {}
  inline BlockRequest(BlockRequest&& from) noexcept
      : BlockRequest(nullptr, ::std::move(from)) {}
  inline BlockRequest& operator=(const BlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockRequest& operator=(BlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockRequest& default_instance() {
    return *reinterpret_cast<const BlockRequest*>(
        &_BlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(BlockRequest& a, BlockRequest& b) { a.Swap(&b); }
  inline void Swap(BlockRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockRequest& from) { BlockRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.BlockRequest"; }

 protected:
  explicit BlockRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BlockRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BlockRequest& from);
  BlockRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BlockRequest&& from) noexcept
      : BlockRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockIdFieldNumber = 1,
  };
  // string block_id = 1;
  void clear_block_id() ;
  const ::std::string& block_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_block_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_block_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_block_id();
  void set_allocated_block_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_block_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_block_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_block_id();

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.BlockRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 37,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BlockRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr block_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BlockRequest_class_data_;
// -------------------------------------------------------------------

class BlockData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.BlockData) */ {
 public:
  inline BlockData() : BlockData(nullptr) {}
  ~BlockData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockData(::google::protobuf::internal::ConstantInitialized);

  inline BlockData(const BlockData& from) : BlockData(nullptr, from) {}
  inline BlockData(BlockData&& from) noexcept
      : BlockData(nullptr, ::std::move(from)) {}
  inline BlockData& operator=(const BlockData& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockData& operator=(BlockData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockData& default_instance() {
    return *reinterpret_cast<const BlockData*>(
        &_BlockData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BlockData& a, BlockData& b) { a.Swap(&b); }
  inline void Swap(BlockData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockData& from) { BlockData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.BlockData"; }

 protected:
  explicit BlockData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BlockData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BlockData& from);
  BlockData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BlockData&& from) noexcept
      : BlockData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockIdFieldNumber = 1,
    kDataFieldNumber = 2,
    kFileResponseFieldNumber = 4,
    kIsParityFieldNumber = 3,
  };
  // string block_id = 1;
  void clear_block_id() ;
  const ::std::string& block_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_block_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_block_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_block_id();
  void set_allocated_block_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_block_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_block_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_block_id();

  public:
  // bytes data = 2;
  void clear_data() ;
  const ::std::string& data() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_data();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_data();
  void set_allocated_data(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // string file_response = 4;
  void clear_file_response() ;
  const ::std::string& file_response() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_file_response(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_file_response();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_file_response();
  void set_allocated_file_response(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_file_response() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_file_response(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_file_response();

  public:
  // bool is_parity = 3;
  void clear_is_parity() ;
  bool is_parity() const;
  void set_is_parity(bool value);

  private:
  bool _internal_is_parity() const;
  void _internal_set_is_parity(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.BlockData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 47,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BlockData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr block_id_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr file_response_;
    bool is_parity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BlockData_class_data_;
// -------------------------------------------------------------------

class SystemStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.SystemStatusResponse) */ {
 public:
  inline SystemStatusResponse() : SystemStatusResponse(nullptr) {}
  ~SystemStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SystemStatusResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SystemStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SystemStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline SystemStatusResponse(const SystemStatusResponse& from) : SystemStatusResponse(nullptr, from) {}
  inline SystemStatusResponse(SystemStatusResponse&& from) noexcept
      : SystemStatusResponse(nullptr, ::std::move(from)) {}
  inline SystemStatusResponse& operator=(const SystemStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemStatusResponse& operator=(SystemStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SystemStatusResponse& default_instance() {
    return *reinterpret_cast<const SystemStatusResponse*>(
        &_SystemStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SystemStatusResponse& a, SystemStatusResponse& b) { a.Swap(&b); }
  inline void Swap(SystemStatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SystemStatusResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SystemStatusResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SystemStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SystemStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SystemStatusResponse& from) { SystemStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SystemStatusResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.SystemStatusResponse"; }

 protected:
  explicit SystemStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SystemStatusResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SystemStatusResponse& from);
  SystemStatusResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SystemStatusResponse&& from) noexcept
      : SystemStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NodeStatus = SystemStatusResponse_NodeStatus;

  // accessors -------------------------------------------------------
  enum : int {
    kNodesFieldNumber = 1,
  };
  // repeated .tec_mfs.SystemStatusResponse.NodeStatus nodes = 1;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;

  public:
  void clear_nodes() ;
  ::tec_mfs::SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField<::tec_mfs::SystemStatusResponse_NodeStatus>* PROTOBUF_NONNULL mutable_nodes();

  private:
  const ::google::protobuf::RepeatedPtrField<::tec_mfs::SystemStatusResponse_NodeStatus>& _internal_nodes() const;
  ::google::protobuf::RepeatedPtrField<::tec_mfs::SystemStatusResponse_NodeStatus>* PROTOBUF_NONNULL _internal_mutable_nodes();
  public:
  const ::tec_mfs::SystemStatusResponse_NodeStatus& nodes(int index) const;
  ::tec_mfs::SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL add_nodes();
  const ::google::protobuf::RepeatedPtrField<::tec_mfs::SystemStatusResponse_NodeStatus>& nodes() const;
  // @@protoc_insertion_point(class_scope:tec_mfs.SystemStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SystemStatusResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tec_mfs::SystemStatusResponse_NodeStatus > nodes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SystemStatusResponse_class_data_;
// -------------------------------------------------------------------

class FileListResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.FileListResponse) */ {
 public:
  inline FileListResponse() : FileListResponse(nullptr) {}
  ~FileListResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileListResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileListResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileListResponse(::google::protobuf::internal::ConstantInitialized);

  inline FileListResponse(const FileListResponse& from) : FileListResponse(nullptr, from) {}
  inline FileListResponse(FileListResponse&& from) noexcept
      : FileListResponse(nullptr, ::std::move(from)) {}
  inline FileListResponse& operator=(const FileListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileListResponse& operator=(FileListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileListResponse& default_instance() {
    return *reinterpret_cast<const FileListResponse*>(
        &_FileListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(FileListResponse& a, FileListResponse& b) { a.Swap(&b); }
  inline void Swap(FileListResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileListResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileListResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileListResponse& from) { FileListResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileListResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.FileListResponse"; }

 protected:
  explicit FileListResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FileListResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FileListResponse& from);
  FileListResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FileListResponse&& from) noexcept
      : FileListResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilesFieldNumber = 1,
  };
  // repeated .tec_mfs.FileReference files = 1;
  int files_size() const;
  private:
  int _internal_files_size() const;

  public:
  void clear_files() ;
  ::tec_mfs::FileReference* PROTOBUF_NONNULL mutable_files(int index);
  ::google::protobuf::RepeatedPtrField<::tec_mfs::FileReference>* PROTOBUF_NONNULL mutable_files();

  private:
  const ::google::protobuf::RepeatedPtrField<::tec_mfs::FileReference>& _internal_files() const;
  ::google::protobuf::RepeatedPtrField<::tec_mfs::FileReference>* PROTOBUF_NONNULL _internal_mutable_files();
  public:
  const ::tec_mfs::FileReference& files(int index) const;
  ::tec_mfs::FileReference* PROTOBUF_NONNULL add_files();
  const ::google::protobuf::RepeatedPtrField<::tec_mfs::FileReference>& files() const;
  // @@protoc_insertion_point(class_scope:tec_mfs.FileListResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FileListResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tec_mfs::FileReference > files_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FileListResponse_class_data_;
// -------------------------------------------------------------------

class FileDataResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tec_mfs.FileDataResponse) */ {
 public:
  inline FileDataResponse() : FileDataResponse(nullptr) {}
  ~FileDataResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FileDataResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FileDataResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FileDataResponse(::google::protobuf::internal::ConstantInitialized);

  inline FileDataResponse(const FileDataResponse& from) : FileDataResponse(nullptr, from) {}
  inline FileDataResponse(FileDataResponse&& from) noexcept
      : FileDataResponse(nullptr, ::std::move(from)) {}
  inline FileDataResponse& operator=(const FileDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FileDataResponse& operator=(FileDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FileDataResponse& default_instance() {
    return *reinterpret_cast<const FileDataResponse*>(
        &_FileDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(FileDataResponse& a, FileDataResponse& b) { a.Swap(&b); }
  inline void Swap(FileDataResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FileDataResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FileDataResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FileDataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FileDataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FileDataResponse& from) { FileDataResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FileDataResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tec_mfs.FileDataResponse"; }

 protected:
  explicit FileDataResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FileDataResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FileDataResponse& from);
  FileDataResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FileDataResponse&& from) noexcept
      : FileDataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileDataFieldNumber = 1,
    kMetadataFieldNumber = 2,
  };
  // bytes file_data = 1;
  void clear_file_data() ;
  const ::std::string& file_data() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_file_data(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_file_data();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_file_data();
  void set_allocated_file_data(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_file_data() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_file_data(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_file_data();

  public:
  // .tec_mfs.FileMetadata metadata = 2;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::tec_mfs::FileMetadata& metadata() const;
  [[nodiscard]] ::tec_mfs::FileMetadata* PROTOBUF_NULLABLE release_metadata();
  ::tec_mfs::FileMetadata* PROTOBUF_NONNULL mutable_metadata();
  void set_allocated_metadata(::tec_mfs::FileMetadata* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_metadata(::tec_mfs::FileMetadata* PROTOBUF_NULLABLE value);
  ::tec_mfs::FileMetadata* PROTOBUF_NULLABLE unsafe_arena_release_metadata();

  private:
  const ::tec_mfs::FileMetadata& _internal_metadata() const;
  ::tec_mfs::FileMetadata* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // @@protoc_insertion_point(class_scope:tec_mfs.FileDataResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FileDataResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr file_data_;
    ::tec_mfs::FileMetadata* PROTOBUF_NULLABLE metadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tec_5fmfs_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FileDataResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NodeInfo

// string node_id = 1;
inline void NodeInfo::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& NodeInfo::node_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.NodeInfo.node_id)
  return _internal_node_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NodeInfo::set_node_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.node_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.NodeInfo.node_id)
}
inline ::std::string* PROTOBUF_NONNULL NodeInfo::mutable_node_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_node_id();
  // @@protoc_insertion_point(field_mutable:tec_mfs.NodeInfo.node_id)
  return _s;
}
inline const ::std::string& NodeInfo::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_.Get();
}
inline void NodeInfo::_internal_set_node_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.node_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NodeInfo::_internal_mutable_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.node_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NodeInfo::release_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.NodeInfo.node_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.node_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.node_id_.Set("", GetArena());
  }
  return released;
}
inline void NodeInfo::set_allocated_node_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.node_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.node_id_.IsDefault()) {
    _impl_.node_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.NodeInfo.node_id)
}

// string node_address = 2;
inline void NodeInfo::clear_node_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_address_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& NodeInfo::node_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.NodeInfo.node_address)
  return _internal_node_address();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NodeInfo::set_node_address(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.node_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.NodeInfo.node_address)
}
inline ::std::string* PROTOBUF_NONNULL NodeInfo::mutable_node_address()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_node_address();
  // @@protoc_insertion_point(field_mutable:tec_mfs.NodeInfo.node_address)
  return _s;
}
inline const ::std::string& NodeInfo::_internal_node_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_address_.Get();
}
inline void NodeInfo::_internal_set_node_address(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.node_address_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NodeInfo::_internal_mutable_node_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.node_address_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NodeInfo::release_node_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.NodeInfo.node_address)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.node_address_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.node_address_.Set("", GetArena());
  }
  return released;
}
inline void NodeInfo::set_allocated_node_address(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.node_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.node_address_.IsDefault()) {
    _impl_.node_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.NodeInfo.node_address)
}

// int32 node_port = 3;
inline void NodeInfo::clear_node_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_port_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t NodeInfo::node_port() const {
  // @@protoc_insertion_point(field_get:tec_mfs.NodeInfo.node_port)
  return _internal_node_port();
}
inline void NodeInfo::set_node_port(::int32_t value) {
  _internal_set_node_port(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:tec_mfs.NodeInfo.node_port)
}
inline ::int32_t NodeInfo::_internal_node_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_port_;
}
inline void NodeInfo::_internal_set_node_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_port_ = value;
}

// string storage_path = 4;
inline void NodeInfo::clear_storage_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& NodeInfo::storage_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.NodeInfo.storage_path)
  return _internal_storage_path();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void NodeInfo::set_storage_path(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.storage_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.NodeInfo.storage_path)
}
inline ::std::string* PROTOBUF_NONNULL NodeInfo::mutable_storage_path()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_storage_path();
  // @@protoc_insertion_point(field_mutable:tec_mfs.NodeInfo.storage_path)
  return _s;
}
inline const ::std::string& NodeInfo::_internal_storage_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.storage_path_.Get();
}
inline void NodeInfo::_internal_set_storage_path(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.storage_path_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL NodeInfo::_internal_mutable_storage_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.storage_path_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE NodeInfo::release_storage_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.NodeInfo.storage_path)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.storage_path_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.storage_path_.Set("", GetArena());
  }
  return released;
}
inline void NodeInfo::set_allocated_storage_path(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.storage_path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.storage_path_.IsDefault()) {
    _impl_.storage_path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.NodeInfo.storage_path)
}

// int64 node_capacity = 5;
inline void NodeInfo::clear_node_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_capacity_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t NodeInfo::node_capacity() const {
  // @@protoc_insertion_point(field_get:tec_mfs.NodeInfo.node_capacity)
  return _internal_node_capacity();
}
inline void NodeInfo::set_node_capacity(::int64_t value) {
  _internal_set_node_capacity(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tec_mfs.NodeInfo.node_capacity)
}
inline ::int64_t NodeInfo::_internal_node_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_capacity_;
}
inline void NodeInfo::_internal_set_node_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_capacity_ = value;
}

// -------------------------------------------------------------------

// BlockData

// string block_id = 1;
inline void BlockData::clear_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& BlockData::block_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.BlockData.block_id)
  return _internal_block_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockData::set_block_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.block_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.BlockData.block_id)
}
inline ::std::string* PROTOBUF_NONNULL BlockData::mutable_block_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_block_id();
  // @@protoc_insertion_point(field_mutable:tec_mfs.BlockData.block_id)
  return _s;
}
inline const ::std::string& BlockData::_internal_block_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_id_.Get();
}
inline void BlockData::_internal_set_block_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.block_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BlockData::_internal_mutable_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.block_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BlockData::release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.BlockData.block_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.block_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.block_id_.Set("", GetArena());
  }
  return released;
}
inline void BlockData::set_allocated_block_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.block_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.block_id_.IsDefault()) {
    _impl_.block_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.BlockData.block_id)
}

// bytes data = 2;
inline void BlockData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& BlockData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.BlockData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockData::set_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.BlockData.data)
}
inline ::std::string* PROTOBUF_NONNULL BlockData::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:tec_mfs.BlockData.data)
  return _s;
}
inline const ::std::string& BlockData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void BlockData::_internal_set_data(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BlockData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.data_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BlockData::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.BlockData.data)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_.Set("", GetArena());
  }
  return released;
}
inline void BlockData::set_allocated_data(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.BlockData.data)
}

// bool is_parity = 3;
inline void BlockData::clear_is_parity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_parity_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool BlockData::is_parity() const {
  // @@protoc_insertion_point(field_get:tec_mfs.BlockData.is_parity)
  return _internal_is_parity();
}
inline void BlockData::set_is_parity(bool value) {
  _internal_set_is_parity(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tec_mfs.BlockData.is_parity)
}
inline bool BlockData::_internal_is_parity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_parity_;
}
inline void BlockData::_internal_set_is_parity(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_parity_ = value;
}

// string file_response = 4;
inline void BlockData::clear_file_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_response_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& BlockData::file_response() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.BlockData.file_response)
  return _internal_file_response();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockData::set_file_response(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.file_response_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.BlockData.file_response)
}
inline ::std::string* PROTOBUF_NONNULL BlockData::mutable_file_response()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_file_response();
  // @@protoc_insertion_point(field_mutable:tec_mfs.BlockData.file_response)
  return _s;
}
inline const ::std::string& BlockData::_internal_file_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_response_.Get();
}
inline void BlockData::_internal_set_file_response(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.file_response_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BlockData::_internal_mutable_file_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.file_response_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BlockData::release_file_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.BlockData.file_response)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.file_response_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_response_.Set("", GetArena());
  }
  return released;
}
inline void BlockData::set_allocated_file_response(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.file_response_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_response_.IsDefault()) {
    _impl_.file_response_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.BlockData.file_response)
}

// -------------------------------------------------------------------

// FileRequest

// string filename = 1;
inline void FileRequest::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FileRequest::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.FileRequest.filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileRequest::set_filename(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.FileRequest.filename)
}
inline ::std::string* PROTOBUF_NONNULL FileRequest::mutable_filename()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:tec_mfs.FileRequest.filename)
  return _s;
}
inline const ::std::string& FileRequest::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void FileRequest::_internal_set_filename(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.filename_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileRequest::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.filename_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileRequest::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.FileRequest.filename)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.filename_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.filename_.Set("", GetArena());
  }
  return released;
}
inline void FileRequest::set_allocated_filename(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.filename_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.filename_.IsDefault()) {
    _impl_.filename_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.FileRequest.filename)
}

// bytes content = 2;
inline void FileRequest::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& FileRequest::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.FileRequest.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileRequest::set_content(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.FileRequest.content)
}
inline ::std::string* PROTOBUF_NONNULL FileRequest::mutable_content()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:tec_mfs.FileRequest.content)
  return _s;
}
inline const ::std::string& FileRequest::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void FileRequest::_internal_set_content(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.content_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileRequest::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.content_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileRequest::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.FileRequest.content)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.content_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.content_.Set("", GetArena());
  }
  return released;
}
inline void FileRequest::set_allocated_content(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.FileRequest.content)
}

// -------------------------------------------------------------------

// FileReference

// string file_id = 1;
inline void FileReference::clear_file_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FileReference::file_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.FileReference.file_id)
  return _internal_file_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileReference::set_file_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.FileReference.file_id)
}
inline ::std::string* PROTOBUF_NONNULL FileReference::mutable_file_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_file_id();
  // @@protoc_insertion_point(field_mutable:tec_mfs.FileReference.file_id)
  return _s;
}
inline const ::std::string& FileReference::_internal_file_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_id_.Get();
}
inline void FileReference::_internal_set_file_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileReference::_internal_mutable_file_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.file_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileReference::release_file_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.FileReference.file_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.file_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_id_.Set("", GetArena());
  }
  return released;
}
inline void FileReference::set_allocated_file_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.file_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_id_.IsDefault()) {
    _impl_.file_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.FileReference.file_id)
}

// string file_name = 2;
inline void FileReference::clear_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& FileReference::file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.FileReference.file_name)
  return _internal_file_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileReference::set_file_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.FileReference.file_name)
}
inline ::std::string* PROTOBUF_NONNULL FileReference::mutable_file_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:tec_mfs.FileReference.file_name)
  return _s;
}
inline const ::std::string& FileReference::_internal_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_name_.Get();
}
inline void FileReference::_internal_set_file_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.file_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileReference::_internal_mutable_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.file_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileReference::release_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.FileReference.file_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.file_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_name_.Set("", GetArena());
  }
  return released;
}
inline void FileReference::set_allocated_file_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.file_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.FileReference.file_name)
}

// -------------------------------------------------------------------

// FileDataResponse

// bytes file_data = 1;
inline void FileDataResponse::clear_file_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FileDataResponse::file_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.FileDataResponse.file_data)
  return _internal_file_data();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileDataResponse::set_file_data(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.FileDataResponse.file_data)
}
inline ::std::string* PROTOBUF_NONNULL FileDataResponse::mutable_file_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_file_data();
  // @@protoc_insertion_point(field_mutable:tec_mfs.FileDataResponse.file_data)
  return _s;
}
inline const ::std::string& FileDataResponse::_internal_file_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_data_.Get();
}
inline void FileDataResponse::_internal_set_file_data(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_data_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileDataResponse::_internal_mutable_file_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.file_data_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileDataResponse::release_file_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.FileDataResponse.file_data)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.file_data_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_data_.Set("", GetArena());
  }
  return released;
}
inline void FileDataResponse::set_allocated_file_data(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.file_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_data_.IsDefault()) {
    _impl_.file_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.FileDataResponse.file_data)
}

// .tec_mfs.FileMetadata metadata = 2;
inline bool FileDataResponse::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void FileDataResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::tec_mfs::FileMetadata& FileDataResponse::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tec_mfs::FileMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::tec_mfs::FileMetadata&>(::tec_mfs::_FileMetadata_default_instance_);
}
inline const ::tec_mfs::FileMetadata& FileDataResponse::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.FileDataResponse.metadata)
  return _internal_metadata();
}
inline void FileDataResponse::unsafe_arena_set_allocated_metadata(
    ::tec_mfs::FileMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::tec_mfs::FileMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tec_mfs.FileDataResponse.metadata)
}
inline ::tec_mfs::FileMetadata* PROTOBUF_NULLABLE FileDataResponse::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tec_mfs::FileMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tec_mfs::FileMetadata* PROTOBUF_NULLABLE FileDataResponse::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.FileDataResponse.metadata)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tec_mfs::FileMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::tec_mfs::FileMetadata* PROTOBUF_NONNULL FileDataResponse::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tec_mfs::FileMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::tec_mfs::FileMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::tec_mfs::FileMetadata* PROTOBUF_NONNULL FileDataResponse::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tec_mfs::FileMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:tec_mfs.FileDataResponse.metadata)
  return _msg;
}
inline void FileDataResponse::set_allocated_metadata(::tec_mfs::FileMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.metadata_ = reinterpret_cast<::tec_mfs::FileMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.FileDataResponse.metadata)
}

// -------------------------------------------------------------------

// FileMetadata

// int64 file_size = 1;
inline void FileMetadata::clear_file_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_size_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t FileMetadata::file_size() const {
  // @@protoc_insertion_point(field_get:tec_mfs.FileMetadata.file_size)
  return _internal_file_size();
}
inline void FileMetadata::set_file_size(::int64_t value) {
  _internal_set_file_size(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:tec_mfs.FileMetadata.file_size)
}
inline ::int64_t FileMetadata::_internal_file_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_size_;
}
inline void FileMetadata::_internal_set_file_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_size_ = value;
}

// string hash = 2;
inline void FileMetadata::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FileMetadata::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.FileMetadata.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FileMetadata::set_hash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.FileMetadata.hash)
}
inline ::std::string* PROTOBUF_NONNULL FileMetadata::mutable_hash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:tec_mfs.FileMetadata.hash)
  return _s;
}
inline const ::std::string& FileMetadata::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void FileMetadata::_internal_set_hash(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.hash_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FileMetadata::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.hash_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FileMetadata::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.FileMetadata.hash)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.hash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.hash_.Set("", GetArena());
  }
  return released;
}
inline void FileMetadata::set_allocated_hash(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hash_.IsDefault()) {
    _impl_.hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.FileMetadata.hash)
}

// int64 created_at = 3;
inline void FileMetadata::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t FileMetadata::created_at() const {
  // @@protoc_insertion_point(field_get:tec_mfs.FileMetadata.created_at)
  return _internal_created_at();
}
inline void FileMetadata::set_created_at(::int64_t value) {
  _internal_set_created_at(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:tec_mfs.FileMetadata.created_at)
}
inline ::int64_t FileMetadata::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_;
}
inline void FileMetadata::_internal_set_created_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = value;
}

// -------------------------------------------------------------------

// FileListResponse

// repeated .tec_mfs.FileReference files = 1;
inline int FileListResponse::_internal_files_size() const {
  return _internal_files().size();
}
inline int FileListResponse::files_size() const {
  return _internal_files_size();
}
inline void FileListResponse::clear_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.files_.Clear();
}
inline ::tec_mfs::FileReference* PROTOBUF_NONNULL FileListResponse::mutable_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tec_mfs.FileListResponse.files)
  return _internal_mutable_files()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tec_mfs::FileReference>* PROTOBUF_NONNULL FileListResponse::mutable_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tec_mfs.FileListResponse.files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_files();
}
inline const ::tec_mfs::FileReference& FileListResponse::files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.FileListResponse.files)
  return _internal_files().Get(index);
}
inline ::tec_mfs::FileReference* PROTOBUF_NONNULL FileListResponse::add_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tec_mfs::FileReference* _add = _internal_mutable_files()->Add();
  // @@protoc_insertion_point(field_add:tec_mfs.FileListResponse.files)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tec_mfs::FileReference>& FileListResponse::files() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tec_mfs.FileListResponse.files)
  return _internal_files();
}
inline const ::google::protobuf::RepeatedPtrField<::tec_mfs::FileReference>&
FileListResponse::_internal_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.files_;
}
inline ::google::protobuf::RepeatedPtrField<::tec_mfs::FileReference>* PROTOBUF_NONNULL
FileListResponse::_internal_mutable_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.files_;
}

// -------------------------------------------------------------------

// SystemStatusResponse_NodeStatus

// string node_id = 1;
inline void SystemStatusResponse_NodeStatus::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SystemStatusResponse_NodeStatus::node_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.SystemStatusResponse.NodeStatus.node_id)
  return _internal_node_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SystemStatusResponse_NodeStatus::set_node_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.node_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.SystemStatusResponse.NodeStatus.node_id)
}
inline ::std::string* PROTOBUF_NONNULL SystemStatusResponse_NodeStatus::mutable_node_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_node_id();
  // @@protoc_insertion_point(field_mutable:tec_mfs.SystemStatusResponse.NodeStatus.node_id)
  return _s;
}
inline const ::std::string& SystemStatusResponse_NodeStatus::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_.Get();
}
inline void SystemStatusResponse_NodeStatus::_internal_set_node_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.node_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SystemStatusResponse_NodeStatus::_internal_mutable_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.node_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SystemStatusResponse_NodeStatus::release_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.SystemStatusResponse.NodeStatus.node_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.node_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.node_id_.Set("", GetArena());
  }
  return released;
}
inline void SystemStatusResponse_NodeStatus::set_allocated_node_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.node_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.node_id_.IsDefault()) {
    _impl_.node_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.SystemStatusResponse.NodeStatus.node_id)
}

// string node_address = 2;
inline void SystemStatusResponse_NodeStatus::clear_node_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_address_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SystemStatusResponse_NodeStatus::node_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.SystemStatusResponse.NodeStatus.node_address)
  return _internal_node_address();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SystemStatusResponse_NodeStatus::set_node_address(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.node_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.SystemStatusResponse.NodeStatus.node_address)
}
inline ::std::string* PROTOBUF_NONNULL SystemStatusResponse_NodeStatus::mutable_node_address()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_node_address();
  // @@protoc_insertion_point(field_mutable:tec_mfs.SystemStatusResponse.NodeStatus.node_address)
  return _s;
}
inline const ::std::string& SystemStatusResponse_NodeStatus::_internal_node_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_address_.Get();
}
inline void SystemStatusResponse_NodeStatus::_internal_set_node_address(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.node_address_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SystemStatusResponse_NodeStatus::_internal_mutable_node_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.node_address_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SystemStatusResponse_NodeStatus::release_node_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.SystemStatusResponse.NodeStatus.node_address)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.node_address_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.node_address_.Set("", GetArena());
  }
  return released;
}
inline void SystemStatusResponse_NodeStatus::set_allocated_node_address(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.node_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.node_address_.IsDefault()) {
    _impl_.node_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.SystemStatusResponse.NodeStatus.node_address)
}

// int32 node_port = 3;
inline void SystemStatusResponse_NodeStatus::clear_node_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_port_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t SystemStatusResponse_NodeStatus::node_port() const {
  // @@protoc_insertion_point(field_get:tec_mfs.SystemStatusResponse.NodeStatus.node_port)
  return _internal_node_port();
}
inline void SystemStatusResponse_NodeStatus::set_node_port(::int32_t value) {
  _internal_set_node_port(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:tec_mfs.SystemStatusResponse.NodeStatus.node_port)
}
inline ::int32_t SystemStatusResponse_NodeStatus::_internal_node_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_port_;
}
inline void SystemStatusResponse_NodeStatus::_internal_set_node_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_port_ = value;
}

// int64 total_capacity = 4;
inline void SystemStatusResponse_NodeStatus::clear_total_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_capacity_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t SystemStatusResponse_NodeStatus::total_capacity() const {
  // @@protoc_insertion_point(field_get:tec_mfs.SystemStatusResponse.NodeStatus.total_capacity)
  return _internal_total_capacity();
}
inline void SystemStatusResponse_NodeStatus::set_total_capacity(::int64_t value) {
  _internal_set_total_capacity(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:tec_mfs.SystemStatusResponse.NodeStatus.total_capacity)
}
inline ::int64_t SystemStatusResponse_NodeStatus::_internal_total_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_capacity_;
}
inline void SystemStatusResponse_NodeStatus::_internal_set_total_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_capacity_ = value;
}

// int64 used_capacity = 5;
inline void SystemStatusResponse_NodeStatus::clear_used_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.used_capacity_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t SystemStatusResponse_NodeStatus::used_capacity() const {
  // @@protoc_insertion_point(field_get:tec_mfs.SystemStatusResponse.NodeStatus.used_capacity)
  return _internal_used_capacity();
}
inline void SystemStatusResponse_NodeStatus::set_used_capacity(::int64_t value) {
  _internal_set_used_capacity(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:tec_mfs.SystemStatusResponse.NodeStatus.used_capacity)
}
inline ::int64_t SystemStatusResponse_NodeStatus::_internal_used_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.used_capacity_;
}
inline void SystemStatusResponse_NodeStatus::_internal_set_used_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.used_capacity_ = value;
}

// int64 free_capacity = 6;
inline void SystemStatusResponse_NodeStatus::clear_free_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.free_capacity_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t SystemStatusResponse_NodeStatus::free_capacity() const {
  // @@protoc_insertion_point(field_get:tec_mfs.SystemStatusResponse.NodeStatus.free_capacity)
  return _internal_free_capacity();
}
inline void SystemStatusResponse_NodeStatus::set_free_capacity(::int64_t value) {
  _internal_set_free_capacity(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:tec_mfs.SystemStatusResponse.NodeStatus.free_capacity)
}
inline ::int64_t SystemStatusResponse_NodeStatus::_internal_free_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.free_capacity_;
}
inline void SystemStatusResponse_NodeStatus::_internal_set_free_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.free_capacity_ = value;
}

// -------------------------------------------------------------------

// SystemStatusResponse

// repeated .tec_mfs.SystemStatusResponse.NodeStatus nodes = 1;
inline int SystemStatusResponse::_internal_nodes_size() const {
  return _internal_nodes().size();
}
inline int SystemStatusResponse::nodes_size() const {
  return _internal_nodes_size();
}
inline void SystemStatusResponse::clear_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodes_.Clear();
}
inline ::tec_mfs::SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL SystemStatusResponse::mutable_nodes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tec_mfs.SystemStatusResponse.nodes)
  return _internal_mutable_nodes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tec_mfs::SystemStatusResponse_NodeStatus>* PROTOBUF_NONNULL SystemStatusResponse::mutable_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tec_mfs.SystemStatusResponse.nodes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nodes();
}
inline const ::tec_mfs::SystemStatusResponse_NodeStatus& SystemStatusResponse::nodes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.SystemStatusResponse.nodes)
  return _internal_nodes().Get(index);
}
inline ::tec_mfs::SystemStatusResponse_NodeStatus* PROTOBUF_NONNULL SystemStatusResponse::add_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tec_mfs::SystemStatusResponse_NodeStatus* _add = _internal_mutable_nodes()->Add();
  // @@protoc_insertion_point(field_add:tec_mfs.SystemStatusResponse.nodes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tec_mfs::SystemStatusResponse_NodeStatus>& SystemStatusResponse::nodes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tec_mfs.SystemStatusResponse.nodes)
  return _internal_nodes();
}
inline const ::google::protobuf::RepeatedPtrField<::tec_mfs::SystemStatusResponse_NodeStatus>&
SystemStatusResponse::_internal_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nodes_;
}
inline ::google::protobuf::RepeatedPtrField<::tec_mfs::SystemStatusResponse_NodeStatus>* PROTOBUF_NONNULL
SystemStatusResponse::_internal_mutable_nodes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nodes_;
}

// -------------------------------------------------------------------

// StatusResponse

// bool success = 1;
inline void StatusResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool StatusResponse::success() const {
  // @@protoc_insertion_point(field_get:tec_mfs.StatusResponse.success)
  return _internal_success();
}
inline void StatusResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:tec_mfs.StatusResponse.success)
}
inline bool StatusResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void StatusResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string message = 2;
inline void StatusResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StatusResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.StatusResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void StatusResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.StatusResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL StatusResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:tec_mfs.StatusResponse.message)
  return _s;
}
inline const ::std::string& StatusResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void StatusResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL StatusResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE StatusResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.StatusResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void StatusResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.StatusResponse.message)
}

// -------------------------------------------------------------------

// BlockRequest

// string block_id = 1;
inline void BlockRequest::clear_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& BlockRequest::block_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tec_mfs.BlockRequest.block_id)
  return _internal_block_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockRequest::set_block_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.block_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tec_mfs.BlockRequest.block_id)
}
inline ::std::string* PROTOBUF_NONNULL BlockRequest::mutable_block_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_block_id();
  // @@protoc_insertion_point(field_mutable:tec_mfs.BlockRequest.block_id)
  return _s;
}
inline const ::std::string& BlockRequest::_internal_block_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_id_.Get();
}
inline void BlockRequest::_internal_set_block_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.block_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BlockRequest::_internal_mutable_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.block_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BlockRequest::release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tec_mfs.BlockRequest.block_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.block_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.block_id_.Set("", GetArena());
  }
  return released;
}
inline void BlockRequest::set_allocated_block_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.block_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.block_id_.IsDefault()) {
    _impl_.block_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tec_mfs.BlockRequest.block_id)
}

// -------------------------------------------------------------------

// Empty

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace tec_mfs


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tec_5fmfs_2eproto_2epb_2eh
